@model IEnumerable<CourseTaskViewModel>
@{
    ViewData["Title"] = "UploadContent";
    Layout = "~/Areas/User/Views/Shared/_LayoutMain.cshtml";
}

    <div class="container">
        <div class="upload-video">

            <h3 class="section_title title-create">Step <span>2</span> of <span>2</span></h3>

            <div class="uploading-box">
                <h4>Choose a picture of your course</h4>
                <div class="form-group form-group-upload">

                    <div class="input-group input-group-video">
                        <div class="add-course-picture">
                            <form method="post">
                                <div class="file-input-wrapper">
                                    <button class="btn-file-input counter_form_button upload-button">Choose a picture</button>
                                    <input type="file" name="CoursePicture">
                                </div>
                            </form>
                        </div>
                        <div class="content-uploading">

                            <img src="~/images/picture-download-icon.svg" alt="AddPicture" />
                        </div>



                    </div>
                </div>

                <h4>Upload your video</h4>
                <div class="form-group form-group-upload">

                    <div class="input-group input-group-video">
                        
                        @foreach (var courseTaskViewModel  in Model)
                        {

                            <div class="add-video">
                                <div class="add-video-box">
                                    <div class="add-video-text">@courseTaskViewModel.SectionName → @courseTaskViewModel.TopicName</div>
                                    <input type="file" class="input-upload" />
                                    <button class="upload">upload</button>
                                    <input type="hidden" class="task-id" value="@courseTaskViewModel.VideoTaskId" />
                                    <div class="upload-bar-plate" style="position: relative; width: 296px; background: #f0f0f0">
                                        <div class="upload-bar" style="background: blue; height: 20px; width: 0"></div>
                                    </div>
                                </div>
                            </div>
                        }

                        <div class="add-video">
                            <div class="add-video-box">
                                <input type="file" class="input-upload"/>
                                <button class="upload">upload</button>
                                <div class="upload-bar-plate" style="position: relative; width: 296px; background: #f0f0f0">
                                    <div class="upload-bar" style="background: blue; height: 20px; width: 0"></div>
                                </div>
                            </div>


                            <div class="add-video-box">
                                <div class="add-video-text">Section-1 Task-2</div>
                                <div class="file-input-wrapper">
                                    <button class="btn-file-input counter_form_button counter_form_button-video">Upload video</button>
                                    <input type="file" name="CourseVideo">
                                </div>
                            </div>


                        </div>

                    </div>
                </div>
            </div>
            


        </div>

    </div>

    <script src="https://code.jquery.com/jquery-3.1.1.min.js"></script>

   
<script>
    

    $(".upload").click(function() {
        var progressEle = $(this).siblings(".upload-bar-plate").find(".upload-bar");
        progressEle.css("background", "blue");

        var input = $(this).siblings(".input-upload");
        console.log(input);
        var files = input[0].files;
        var formData = new FormData();
        var taskId = $(this).siblings(".task-id").val();
        for (var i = 0; i != files.length; i++) {
            formData.append("files", files[i]);
        }
        formData.append("TaskId",taskId);
        console.log(formData);
        $.ajax({
            url: "@Url.Action("Upload","Uploader")",
            data: formData,
            processData: false,
            contentType: false,
            type: "POST",
            xhr: function() {
                var xhr = new window.XMLHttpRequest();
                xhr.upload.addEventListener("progress",
                    function(evt) {
                        if (evt.lengthComputable) {
                            var progress = Math.round((evt.loaded / evt.total) * 100);
                            progressEle.width(progress + "%");
                        }
                    },
                    false);
                return xhr;
            },
            success: function(data) {
                progressEle.css("background", "green");
                console.log("RDY");
            }
        });
    });
</script>
  
}